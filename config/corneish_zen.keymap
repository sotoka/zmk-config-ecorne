/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    chosen {
        // zmk,matrix_transform = &default_transform;

        zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt TAB ESCAPE    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y           &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H           &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N           &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp KP_ENTER
                                &kp LGUI  &mo 1  &kp SPACE    &lt 3 KP_ENTER  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 |SD_UL|   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LA(TAB)   &kp N1          &kp N2        &kp N3        &kp N4        &kp N5               &kp N6   &kp N7   &kp N8         &kp N9  &kp N0   &kp BSPC
&kp CAPSLOCK  &kp F1          &kp F2        &kp F3        &kp F4        &kp F5               &kp F6   &kp F7   &kp F8         &kp F9  &kp F10  &trans
&kp LSHFT     &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &ext_power EP_TOG    &kp F11  &kp F12  &none          &none   &trans   &none
                                            &kp LEFT_ALT  &trans        &kp SPACE            &trans   &trans   &kp RIGHT_WIN
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |SD_UL|     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL      &kp AT        &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &none         &none         &none     &none     &none        &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &out OUT_USB  &out OUT_BLE  &none     &none     &none        &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                       &kp LGUI  &trans    &kp SPACE    &trans     &trans     &kp RALT
            >;
        };

        Mods {
            bindings = <
&kp LA(F4)   &none  &none           &kp C_VOLUME_UP    &none       &none               &none  &none           &kp UP_ARROW    &none            &none  &kp DELETE
&none        &none  &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_NEXT  &none               &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &kp LG(L)
&bootloader  &none  &none           &none              &none       &none               &none  &none           &none           &none            &none  &kp LG(LS(S))
                                    &none              &none       &kp C_PLAY_PAUSE    &none  &none           &kp LC(LS(A))
            >;

            label = "MODS";
        };
    };
};
